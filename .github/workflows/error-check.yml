- name: Format ESLint Errors for Slack
  if: env.has_errors == 'true'
  id: format_slack_message
  run: |
    SUMMARY=$(jq -r '.[0:3] | map("*File:* \(.file)\n\(.errors | join("\n"))") | join("\n\n")' eslint-summary.json)
    SUMMARY=${SUMMARY:-"No detailed errors found"}
    SUMMARY="${SUMMARY//\"/}"  # Remove problematic characters
    echo "eslint_summary=$SUMMARY" >> $GITHUB_ENV

- name: Send Slack Notification
  if: always()
  env:
    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_AUTOMATION_WEBHOOK_URL }}
  run: |
    AUTHOR="${{ github.actor }}"
    REPO="${{ github.repository }}"
    BRANCH="${{ github.ref }}"
    COMMIT_URL="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"

    if [ "$has_errors" = "true" ]; then
      STATUS=":x: *ESLint found errors in clients/ folder.*"
      DETAILS="${eslint_summary}"
    else
      STATUS=":white_check_mark: *No ESLint errors in clients/ folder.*"
      DETAILS=""
    fi

    curl -X POST -H 'Content-type: application/json' --data "{
      \"text\": \"${STATUS}\n*Repository:* ${REPO}\n*Branch:* ${BRANCH}\n*Commit:* <${COMMIT_URL}>\n*Pushed by:* ${AUTHOR}\n\n${DETAILS}\"
    }" $SLACK_WEBHOOK_URL
