name: ESLint on Changed Files and Notify Slack

on:
  push:
    branches:
      - main
      - develop
      - feature/*

jobs:
  lint:
    name: Run ESLint on Changed Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Get changed JS files
        id: changed_files
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD -- '*.js' '*.jsx' '*.ts' '*.tsx')
          if [[ -z "$CHANGED_FILES" ]]; then
            echo "No JavaScript files changed."
            echo "eslint_needed=false" >> $GITHUB_ENV
          else
            echo "eslint_needed=true" >> $GITHUB_ENV
            echo "$CHANGED_FILES" > changed_files.txt
          fi

      - name: Run ESLint on changed files
        if: env.eslint_needed == 'true'
        id: eslint
        run: |
          npx eslint $(cat changed_files.txt) --format json --output-file eslint-report.json || true

      - name: Process ESLint Results
        if: env.eslint_needed == 'true'
        id: parse_eslint
        run: |
          ERROR_COUNT=$(jq '[.[] | .errorCount] | add' eslint-report.json)
          if [ "$ERROR_COUNT" -gt 0 ]; then
            echo "has_errors=true" >> $GITHUB_ENV
            jq -r '[.[] | select(.errorCount > 0) | 
            {file: .filePath, errors: .messages | map("* Line \(.line), Col \(.column): \(.message)")} ]' eslint-report.json > eslint-summary.json
          else
            echo "has_errors=false" >> $GITHUB_ENV
          fi

      - name: Format ESLint Errors for Slack
        if: env.has_errors == 'true'
        id: format_slack_message
        run: |
          SUMMARY=$(jq -r '.[0:3] | map("*File:* \(.file)\n\(.errors | join("\n"))") | join("\n\n")' eslint-summary.json)
          SUMMARY=${SUMMARY:-"No detailed errors found"}
          echo "eslint_summary=$SUMMARY" >> $GITHUB_ENV

      - name: Send Slack Notification
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_AUTOMATION_WEBHOOK_URL }}
        run: |
          AUTHOR="${{ github.actor }}"
          REPO="${{ github.repository }}"
          BRANCH="${{ github.ref }}"
          COMMIT_URL="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"

          if [ "$has_errors" = "true" ]; then
            STATUS=":x: *ESLint found errors in the latest push.*"
            DETAILS="${eslint_summary}"
          else
            STATUS=":white_check_mark: *ESLint passed with no errors.*"
            DETAILS=""
          fi

          curl -X POST -H "Authorization: Bearer $SLACK_BOT_TOKEN" -H 'Content-type: application/json' \
          --data "{
            \"channel\": \"#eslint-alerts\",
            \"text\": \"${STATUS}\n*Repository:* ${REPO}\n*Branch:* ${BRANCH}\n*Commit:* <${COMMIT_URL}>\n*Pushed by:* ${AUTHOR}\n\n${DETAILS}\"
          }" $SLACK_WEBHOOK_URL
